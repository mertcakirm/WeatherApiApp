{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { EventEmitter, Output } from '@angular/core';\nexport class WeatherComponent {\n  setCity() {\n    this.setCityEvent.emit(this.newcity);\n    console.log(this.newcity);\n    return this.newcity;\n  }\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.newcity = '';\n    this.selectedCity = this.newcity;\n    this.setCityEvent = new EventEmitter();\n  }\n  ngOnInit() {\n    this.apiService.getApiData(this.newcity).subscribe(data => {\n      this.weather = data;\n      this.isim = this.weather.data[0].city_name;\n      this.anlik_bilgiler = this.weather.data[0];\n      this.sicaklik = this.weather.data[0].app_temp;\n      this.hava = this.weather.data[0].weather.description;\n      // tarih ve saat ile ilgili veriler\n      let zaman = new Date();\n      this.saat = zaman.getHours();\n      this.dakika = zaman.getMinutes();\n      this.yil = zaman.getFullYear();\n      this.ay = zaman.getMonth() + 1;\n      this.gun = zaman.getDate();\n      let resimler = [{\n        durum: 'Overcast clouds',\n        url: 'https://st2.depositphotos.com/1064969/42557/v/1600/depositphotos_425573118-stock-illustration-weather-forecast-partly-cloudy-icon.jpg'\n      }, {\n        durum: 'Scattered clouds ',\n        url: 'https://images.freejpgimages.com/vme/images/1/6/166202/symbols_weather_clear_sunny_preview.'\n      }, {\n        durum: 'rainy',\n        url: 'https://previews.123rf.com/images/carbo82/carbo821206/carbo82120600075/14181786-simge-ya%C4%9F%C4%B1%C5%9Fl%C4%B1-hava.jpg'\n      }, {\n        durum: 'cloudy',\n        url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg'\n      }, {\n        durum: 'Light rain',\n        url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg'\n      }, {\n        durum: 'Clear Sky',\n        url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg'\n      }];\n      let resimUrl = resimler.find(resim => resim.durum === this.hava);\n      console.log(this.weather);\n      if (resimUrl) {\n        this.resim = resimUrl.url;\n      } else {\n        console.error(\"resim bulunamadı...\");\n      }\n    });\n  }\n}\n__decorate([Output()], WeatherComponent.prototype, \"setCityEvent\", void 0);","map":{"version":3,"names":["EventEmitter","Output","WeatherComponent","setCity","setCityEvent","emit","newcity","console","log","constructor","apiService","selectedCity","ngOnInit","getApiData","subscribe","data","weather","isim","city_name","anlik_bilgiler","sicaklik","app_temp","hava","description","zaman","Date","saat","getHours","dakika","getMinutes","yil","getFullYear","ay","getMonth","gun","getDate","resimler","durum","url","resimUrl","find","resim","error","__decorate"],"sources":["C:\\Users\\mertc\\OneDrive\\Masaüstü\\KODLAMA\\angular\\project1\\src\\app\\weather\\weather.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { ApiService } from './ApiService';\nimport { Injectable } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\n\n\n\n}\n\n\n\nexport class WeatherComponent implements OnInit {\n  weather: any;\n  isim: any;\n  anlik_bilgiler: any;\n  saat: any;\n  dakika: any;\n  yil: any;\n  gun: any;\n  ay: any;\n  sicaklik: any;\n  hava: any;\n  resim: any;\n  yeni_bilgiler: any;\n  newcity:any='';\n  selectedCity = this.newcity;\n\n\n\n\n  @Output() setCityEvent=new EventEmitter<any>();\n\n  setCity(){\n    this.setCityEvent.emit(this.newcity);\n    console.log(this.newcity);\n    return this.newcity\n  }\n  \n  \n  \n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getApiData(this.newcity).subscribe(data => {\n      this.weather = data;\n      this.isim = this.weather.data[0].city_name;\n      this.anlik_bilgiler = this.weather.data[0];\n\n      this.sicaklik = this.weather.data[0].app_temp;\n      this.hava = this.weather.data[0].weather.description;\n      // tarih ve saat ile ilgili veriler\n      let zaman = new Date()\n      this.saat = zaman.getHours();\n      this.dakika = zaman.getMinutes();\n      this.yil = zaman.getFullYear();\n      this.ay = zaman.getMonth() + 1;\n      this.gun = zaman.getDate();\n      \n\n      let resimler = [\n        { durum: 'Overcast clouds', url: 'https://st2.depositphotos.com/1064969/42557/v/1600/depositphotos_425573118-stock-illustration-weather-forecast-partly-cloudy-icon.jpg' },\n        { durum: 'Scattered clouds ', url: 'https://images.freejpgimages.com/vme/images/1/6/166202/symbols_weather_clear_sunny_preview.' },\n        { durum: 'rainy', url: 'https://previews.123rf.com/images/carbo82/carbo821206/carbo82120600075/14181786-simge-ya%C4%9F%C4%B1%C5%9Fl%C4%B1-hava.jpg' },\n        { durum: 'cloudy', url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg' },\n        { durum: 'Light rain', url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg' },\n        { durum: 'Clear Sky', url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg' },\n\n\n      ];\n\n      let resimUrl = resimler.find(resim => resim.durum === this.hava);\n      console.log(this.weather);\n      \n      if (resimUrl) {\n        this.resim = resimUrl.url;\n      } else {\n        console.error(\"resim bulunamadı...\");\n      }\n\n\n    });\n  }\n}\n"],"mappings":";AAAA,SAAoBA,YAAY,EAA4BC,MAAM,QAAQ,eAAe;AAsBzF,OAAM,MAAOC,gBAAgB;EAqB3BC,OAAOA,CAAA;IACL,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;IACzB,OAAO,IAAI,CAACA,OAAO;EACrB;EAIAG,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAhB9B,KAAAJ,OAAO,GAAK,EAAE;IACd,KAAAK,YAAY,GAAG,IAAI,CAACL,OAAO;IAKjB,KAAAF,YAAY,GAAC,IAAIJ,YAAY,EAAO;EAUA;EAE9CY,QAAQA,CAAA;IACN,IAAI,CAACF,UAAU,CAACG,UAAU,CAAC,IAAI,CAACP,OAAO,CAAC,CAACQ,SAAS,CAACC,IAAI,IAAG;MACxD,IAAI,CAACC,OAAO,GAAGD,IAAI;MACnB,IAAI,CAACE,IAAI,GAAG,IAAI,CAACD,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC,CAACG,SAAS;MAC1C,IAAI,CAACC,cAAc,GAAG,IAAI,CAACH,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;MAE1C,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACJ,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC,CAACM,QAAQ;MAC7C,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC,CAACC,OAAO,CAACO,WAAW;MACpD;MACA,IAAIC,KAAK,GAAG,IAAIC,IAAI,EAAE;MACtB,IAAI,CAACC,IAAI,GAAGF,KAAK,CAACG,QAAQ,EAAE;MAC5B,IAAI,CAACC,MAAM,GAAGJ,KAAK,CAACK,UAAU,EAAE;MAChC,IAAI,CAACC,GAAG,GAAGN,KAAK,CAACO,WAAW,EAAE;MAC9B,IAAI,CAACC,EAAE,GAAGR,KAAK,CAACS,QAAQ,EAAE,GAAG,CAAC;MAC9B,IAAI,CAACC,GAAG,GAAGV,KAAK,CAACW,OAAO,EAAE;MAG1B,IAAIC,QAAQ,GAAG,CACb;QAAEC,KAAK,EAAE,iBAAiB;QAAEC,GAAG,EAAE;MAAuI,CAAE,EAC1K;QAAED,KAAK,EAAE,mBAAmB;QAAEC,GAAG,EAAE;MAA6F,CAAE,EAClI;QAAED,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAE;MAA4H,CAAE,EACrJ;QAAED,KAAK,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAA8G,CAAE,EACxI;QAAED,KAAK,EAAE,YAAY;QAAEC,GAAG,EAAE;MAA8G,CAAE,EAC5I;QAAED,KAAK,EAAE,WAAW;QAAEC,GAAG,EAAE;MAA8G,CAAE,CAG5I;MAED,IAAIC,QAAQ,GAAGH,QAAQ,CAACI,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACJ,KAAK,KAAK,IAAI,CAACf,IAAI,CAAC;MAChEf,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,OAAO,CAAC;MAEzB,IAAIuB,QAAQ,EAAE;QACZ,IAAI,CAACE,KAAK,GAAGF,QAAQ,CAACD,GAAG;OAC1B,MAAM;QACL/B,OAAO,CAACmC,KAAK,CAAC,qBAAqB,CAAC;;IAIxC,CAAC,CAAC;EACJ;;AAnDUC,UAAA,EAAT1C,MAAM,EAAE,C,qDAAsC"},"metadata":{},"sourceType":"module","externalDependencies":[]}