{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./ApiService\";\nimport * as i2 from \"@angular/forms\";\nclass WeatherComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.selectedCity = '';\n  }\n  ngOnInit() {\n    this.apiService.getApiData(this.selectedCity).subscribe(data => {\n      this.weather = data;\n      this.isim = this.weather.data[0].city_name;\n      this.anlik_bilgiler = this.weather.data[0];\n      console.log(this.weather);\n      let zaman = new Date();\n      this.saat = zaman.getHours();\n      this.dakika = zaman.getMinutes();\n      this.yil = zaman.getFullYear();\n      this.ay = zaman.getMonth() + 1;\n      this.gun = zaman.getDay();\n      this.sicaklik = this.weather.data[0].app_temp;\n      this.hava = this.weather.data[0].weather.description;\n      this.yeni_bilgiler = this.weather.data[0];\n      let resimler = [{\n        durum: 'Scattered clouds',\n        url: 'https://st2.depositphotos.com/1064969/42557/v/1600/depositphotos_425573118-stock-illustration-weather-forecast-partly-cloudy-icon.jpg'\n      }, {\n        durum: 'Haze',\n        url: 'https://images.freejpgimages.com/vme/images/1/6/166202/symbols_weather_clear_sunny_preview.'\n      }, {\n        durum: 'rainy',\n        url: 'https://previews.123rf.com/images/carbo82/carbo821206/carbo82120600075/14181786-simge-ya%C4%9F%C4%B1%C5%9Fl%C4%B1-hava.jpg'\n      }, {\n        durum: 'cloudy',\n        url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg'\n      }];\n      let resimUrl = resimler.find(resim => resim.durum === this.hava);\n      if (resimUrl) {\n        this.resim = resimUrl.url;\n      } else {\n        console.error(\"resim bulunamadı...\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherComponent,\n    selectors: [[\"app-weather\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"w-screen\", \"h-screen\", 2, \"background\", \"rgb(45,54,172)\", \"background\", \"radial-gradient(circle, rgba(45,54,172,1) 14%, rgba(13,66,145,1) 38%, rgba(38,35,152,1) 55%, rgba(23,50,138,1) 78%, rgba(49,78,172,1) 91%)\"], [1, \"text-center\", \"text-white\", \"uppercase\", \"text-5xl\", \"pt-5\", \"font-bold\"], [1, \"block\", \"text-center\", \"mt-10\"], [\"type\", \"text\", \"placeholder\", \" Please write the city name...\", 1, \"w-96\", \"h-10\", \"rounded-full\", \"border-2\", \"border-black\", 3, \"ngModel\", \"ngModelChange\"], [1, \"w-20\", \"h-10\", \"rounded-2xl\", \"bg-amber-600\", \"border-2\", \"border-black\", 3, \"click\"], [1, \"mt-10\", \"text-white\"], [1, \"block\", \"text-center\", \"text-4xl\", \"uppercase\", \"font-bold\"], [1, \"mt-5\"], [1, \"block\", \"text-center\", \"text-xl\", \"uppercase\", \"font-mono\"], [1, \"text-center\"], [\"src\", \"alt\", \"\", \"resim\", 1, \"w-40\", \"rounded-full\", \"mx-auto\"], [1, \"text-2xl\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \" weather app \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.city_name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_5_listener() {\n          return ctx.getApiData();\n        });\n        i0.ɵɵtext(6, \"SEARCH\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"h1\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelement(10, \"p\", 8)(11, \"p\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelement(13, \"img\", 10)(14, \"div\", 11);\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵtext(16, \"Heat Degree \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"div\", 9);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.city_name);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3ZWF0aGVyLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2VhdGhlci93ZWF0aGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9LQUFvSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { WeatherComponent };","map":{"version":3,"names":["WeatherComponent","constructor","apiService","selectedCity","ngOnInit","getApiData","subscribe","data","weather","isim","city_name","anlik_bilgiler","console","log","zaman","Date","saat","getHours","dakika","getMinutes","yil","getFullYear","ay","getMonth","gun","getDay","sicaklik","app_temp","hava","description","yeni_bilgiler","resimler","durum","url","resimUrl","find","resim","error","_","i0","ɵɵdirectiveInject","i1","ApiService","_2","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","WeatherComponent_Template_input_ngModelChange_4_listener","$event","WeatherComponent_Template_button_click_5_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\mertc\\OneDrive\\Masaüstü\\KODLAMA\\angular\\project1\\src\\app\\weather\\weather.component.ts","C:\\Users\\mertc\\OneDrive\\Masaüstü\\KODLAMA\\angular\\project1\\src\\app\\weather\\weather.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './ApiService';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  weather: any;\n  isim: any;\n  anlik_bilgiler: any;\n  saat: any;\n  dakika: any;\n  yil: any;\n  gun: any;\n  ay: any;\n  sicaklik: any;\n  hava: any;\n  resim: any;\n  selectedCity = '';\n  yeni_bilgiler: any;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getApiData(this.selectedCity).subscribe(data => {\n      this.weather = data;\n      this.isim = this.weather.data[0].city_name;\n      this.anlik_bilgiler = this.weather.data[0];\n      console.log(this.weather);\n      let zaman = new Date()\n      this.saat = zaman.getHours();\n      this.dakika = zaman.getMinutes();\n      this.yil = zaman.getFullYear();\n      this.ay = zaman.getMonth() + 1;\n      this.gun = zaman.getDay();\n      this.sicaklik = this.weather.data[0].app_temp;\n      this.hava = this.weather.data[0].weather.description;\n      this.yeni_bilgiler = this.weather.data[0];\n\n      let resimler = [\n        { durum: 'Scattered clouds', url: 'https://st2.depositphotos.com/1064969/42557/v/1600/depositphotos_425573118-stock-illustration-weather-forecast-partly-cloudy-icon.jpg' },\n        { durum: 'Haze', url: 'https://images.freejpgimages.com/vme/images/1/6/166202/symbols_weather_clear_sunny_preview.' },\n        { durum: 'rainy', url: 'https://previews.123rf.com/images/carbo82/carbo821206/carbo82120600075/14181786-simge-ya%C4%9F%C4%B1%C5%9Fl%C4%B1-hava.jpg' },\n        { durum: 'cloudy', url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg' },\n\n\n      ];\n\n      let resimUrl = resimler.find(resim => resim.durum === this.hava);\n\n      if (resimUrl) {\n        this.resim = resimUrl.url;\n      } else {\n        console.error(\"resim bulunamadı...\");\n      }\n    });\n  }\n}\n","<div style=\"background: rgb(45,54,172);\r\nbackground: radial-gradient(circle, rgba(45,54,172,1) 14%, rgba(13,66,145,1) 38%, rgba(38,35,152,1) 55%, rgba(23,50,138,1) 78%, rgba(49,78,172,1) 91%);\" class=\"w-screen h-screen\">\r\n    <div class=\"text-center text-white uppercase text-5xl pt-5 font-bold\">\r\n        weather app\r\n    </div>\r\n    <div class=\"block text-center mt-10\">\r\n        <input [(ngModel)]=\"city_name\" type=\"text\" placeholder=\" Please write the city name...\" class=\"w-96 h-10 rounded-full border-2 border-black\">\r\n        <button (click)=\"getApiData()\" class=\"w-20 h-10 rounded-2xl bg-amber-600 border-2 border-black\">SEARCH</button>\r\n</div>\r\n    <div class=\"mt-10 text-white\">\r\n        <!-- şehir adı -->\r\n        <h1 class=\"block text-center text-4xl uppercase font-bold\"></h1>\r\n        <!-- anlık tarih saat bilgileri -->\r\n        <div class=\"mt-5\">\r\n        <p class=\"block text-center text-xl uppercase font-mono\"></p>\r\n        <p class=\"block text-center text-xl uppercase font-mono\"> </p>\r\n        </div>\r\n        <!-- anlık hava durumu bilgisi -->\r\n        <div class=\"text-center\">\r\n            <img class=\"w-40 rounded-full mx-auto\" src= alt=\"resim\">\r\n            <div class=\"text-2xl\"></div>\r\n            <div class=\"text-2xl\">Heat Degree </div>\r\n        </div>\r\n        <!-- diğer ayrıntılar -->\r\n        <div class=\"text-center\">\r\n            \r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}