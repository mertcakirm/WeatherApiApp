{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { EventEmitter, Output } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nclass setCity {\n  constructor() {}\n  static #_ = this.ɵfac = function setCity_Factory(t) {\n    return new (t || setCity)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: setCity,\n    selectors: [[\"app-weather\"]],\n    decls: 26,\n    vars: 10,\n    consts: [[1, \"w-screen\", \"h-screen\", 2, \"background\", \"rgb(45,54,172)\", \"background\", \"radial-gradient(circle, rgba(45,54,172,1) 14%, rgba(13,66,145,1) 38%, rgba(38,35,152,1) 55%, rgba(23,50,138,1) 78%, rgba(49,78,172,1) 91%)\"], [1, \"text-center\", \"text-white\", \"uppercase\", \"text-5xl\", \"pt-5\", \"font-bold\"], [1, \"block\", \"text-center\", \"mt-10\"], [\"type\", \"text\", \"placeholder\", \"Please write the city name...\", 1, \"w-96\", \"h-10\", \"rounded-full\", \"border-2\", \"border-black\", 3, \"ngModel\", \"ngModelChange\"], [1, \"w-20\", \"h-10\", \"rounded-2xl\", \"bg-amber-600\", \"border-2\", \"border-black\", 3, \"click\"], [\"href\", \"newcity\"], [1, \"mt-10\", \"text-white\"], [1, \"block\", \"text-center\", \"text-4xl\", \"uppercase\", \"font-bold\"], [1, \"mt-5\"], [1, \"block\", \"text-center\", \"text-xl\", \"uppercase\", \"font-mono\"], [1, \"block\", \"text-center\", \"mb-5\", \"text-xl\", \"uppercase\", \"font-mono\"], [1, \"text-center\"], [\"alt\", \"resim\", 1, \"w-40\", \"rounded-full\", \"mx-auto\", 3, \"src\"], [1, \"text-2xl\"], [1, \"text-xl\"]],\n    template: function setCity_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Weather App \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function setCity_Template_input_ngModelChange_4_listener($event) {\n          return ctx.newcity = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function setCity_Template_button_click_5_listener() {\n          return ctx.setCity();\n        });\n        i0.ɵɵelementStart(6, \"a\", 5);\n        i0.ɵɵtext(7, \"SEARCH\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"h1\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"p\", 9);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\", 10);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 11);\n        i0.ɵɵelement(17, \"img\", 12);\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 13);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 11);\n        i0.ɵɵelement(23, \"p\", 14)(24, \"p\", 14)(25, \"p\", 14);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newcity);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.isim);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate3(\"\", ctx.gun, \"/\", ctx.ay, \"/\", ctx.yil, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.saat, \":\", ctx.dakika, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.resim, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hava);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Hate \", ctx.sicaklik, \"* Degree\");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3ZWF0aGVyLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2VhdGhlci93ZWF0aGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9LQUFvSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n  static #_3 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: setCity,\n    factory: setCity.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { setCity };\nexport class WeatherComponent {\n  setCity() {\n    this.setCityEvent.emit(this.newcity);\n    console.log(this.newcity);\n    return this.newcity;\n  }\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.newcity = '';\n    this.selectedCity = this.newcity;\n    this.setCityEvent = new EventEmitter();\n  }\n  ngOnInit() {\n    this.apiService.getApiData(this.newcity).subscribe(data => {\n      this.weather = data;\n      this.isim = this.weather.data[0].city_name;\n      this.anlik_bilgiler = this.weather.data[0];\n      this.sicaklik = this.weather.data[0].app_temp;\n      this.hava = this.weather.data[0].weather.description;\n      // tarih ve saat ile ilgili veriler\n      let zaman = new Date();\n      this.saat = zaman.getHours();\n      this.dakika = zaman.getMinutes();\n      this.yil = zaman.getFullYear();\n      this.ay = zaman.getMonth() + 1;\n      this.gun = zaman.getDate();\n      let resimler = [{\n        durum: 'Overcast clouds',\n        url: 'https://st2.depositphotos.com/1064969/42557/v/1600/depositphotos_425573118-stock-illustration-weather-forecast-partly-cloudy-icon.jpg'\n      }, {\n        durum: 'Scattered clouds ',\n        url: 'https://images.freejpgimages.com/vme/images/1/6/166202/symbols_weather_clear_sunny_preview.'\n      }, {\n        durum: 'rainy',\n        url: 'https://previews.123rf.com/images/carbo82/carbo821206/carbo82120600075/14181786-simge-ya%C4%9F%C4%B1%C5%9Fl%C4%B1-hava.jpg'\n      }, {\n        durum: 'cloudy',\n        url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg'\n      }, {\n        durum: 'Light rain',\n        url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg'\n      }, {\n        durum: 'Clear Sky',\n        url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg'\n      }];\n      let resimUrl = resimler.find(resim => resim.durum === this.hava);\n      console.log(this.weather);\n      if (resimUrl) {\n        this.resim = resimUrl.url;\n      } else {\n        console.error(\"resim bulunamadı...\");\n      }\n    });\n  }\n}\n__decorate([Output()], WeatherComponent.prototype, \"setCityEvent\", void 0);","map":{"version":3,"names":["EventEmitter","Output","setCity","constructor","_","_2","selectors","decls","vars","consts","template","setCity_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","setCity_Template_input_ngModelChange_4_listener","$event","newcity","setCity_Template_button_click_5_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","isim","ɵɵtextInterpolate3","gun","ay","yil","ɵɵtextInterpolate2","saat","dakika","ɵɵpropertyInterpolate","resim","ɵɵsanitizeUrl","hava","ɵɵtextInterpolate1","sicaklik","factory","ɵfac","providedIn","WeatherComponent","setCityEvent","emit","console","log","apiService","selectedCity","ngOnInit","getApiData","subscribe","data","weather","city_name","anlik_bilgiler","app_temp","description","zaman","Date","getHours","getMinutes","getFullYear","getMonth","getDate","resimler","durum","url","resimUrl","find","error","__decorate"],"sources":["C:\\Users\\mertc\\OneDrive\\Masaüstü\\KODLAMA\\angular\\project1\\src\\app\\weather\\weather.component.ts","C:\\Users\\mertc\\OneDrive\\Masaüstü\\KODLAMA\\angular\\project1\\src\\app\\weather\\weather.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { ApiService } from './ApiService';\nimport { Injectable } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class setCity{\n\n\n  city_name:any;\n\n  constructor(){\n\n\n  }\n\n\n\n\n}\n\n\n\nexport class WeatherComponent implements OnInit {\n  weather: any;\n  isim: any;\n  anlik_bilgiler: any;\n  saat: any;\n  dakika: any;\n  yil: any;\n  gun: any;\n  ay: any;\n  sicaklik: any;\n  hava: any;\n  resim: any;\n  yeni_bilgiler: any;\n  newcity:any='';\n  selectedCity = this.newcity;\n\n\n\n\n  @Output() setCityEvent=new EventEmitter<any>();\n\n  setCity(){\n    this.setCityEvent.emit(this.newcity);\n    console.log(this.newcity);\n    return this.newcity\n  }\n  \n  \n  \n  constructor(private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.apiService.getApiData(this.newcity).subscribe(data => {\n      this.weather = data;\n      this.isim = this.weather.data[0].city_name;\n      this.anlik_bilgiler = this.weather.data[0];\n\n      this.sicaklik = this.weather.data[0].app_temp;\n      this.hava = this.weather.data[0].weather.description;\n      // tarih ve saat ile ilgili veriler\n      let zaman = new Date()\n      this.saat = zaman.getHours();\n      this.dakika = zaman.getMinutes();\n      this.yil = zaman.getFullYear();\n      this.ay = zaman.getMonth() + 1;\n      this.gun = zaman.getDate();\n      \n\n      let resimler = [\n        { durum: 'Overcast clouds', url: 'https://st2.depositphotos.com/1064969/42557/v/1600/depositphotos_425573118-stock-illustration-weather-forecast-partly-cloudy-icon.jpg' },\n        { durum: 'Scattered clouds ', url: 'https://images.freejpgimages.com/vme/images/1/6/166202/symbols_weather_clear_sunny_preview.' },\n        { durum: 'rainy', url: 'https://previews.123rf.com/images/carbo82/carbo821206/carbo82120600075/14181786-simge-ya%C4%9F%C4%B1%C5%9Fl%C4%B1-hava.jpg' },\n        { durum: 'cloudy', url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg' },\n        { durum: 'Light rain', url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg' },\n        { durum: 'Clear Sky', url: 'https://images.freeimages.com/cme/images/istock/previews/7126/71264247-cloudy-icon-overcast-weather-sign.jpg' },\n\n\n      ];\n\n      let resimUrl = resimler.find(resim => resim.durum === this.hava);\n      console.log(this.weather);\n      \n      if (resimUrl) {\n        this.resim = resimUrl.url;\n      } else {\n        console.error(\"resim bulunamadı...\");\n      }\n\n\n    });\n  }\n}\n","<div class=\"w-screen h-screen\" style=\"background: rgb(45,54,172);\r\nbackground: radial-gradient(circle, rgba(45,54,172,1) 14%, rgba(13,66,145,1) 38%, rgba(38,35,152,1) 55%, rgba(23,50,138,1) 78%, rgba(49,78,172,1) 91%);\">\r\n    <div class=\"text-center text-white uppercase text-5xl pt-5 font-bold\">\r\n      Weather App\r\n    </div>\r\n    <div class=\"block text-center mt-10\">\r\n      <input [(ngModel)]=\"newcity\" type=\"text\" placeholder=\"Please write the city name...\" class=\"w-96 h-10 rounded-full border-2 border-black\">\r\n      <button (click)=\"setCity()\"  class=\"w-20 h-10 rounded-2xl bg-amber-600 border-2 border-black\"><a href=\"newcity\">SEARCH</a></button>\r\n    </div>\r\n    <div class=\"mt-10 text-white\">\r\n      <!-- şehir adı -->\r\n      <h1 class=\"block text-center text-4xl uppercase font-bold\">{{ isim }}</h1>\r\n      <!-- anlık tarih saat bilgileri -->\r\n      <div class=\"mt-5\">\r\n        <p class=\"block text-center text-xl uppercase font-mono\">{{gun}}/{{ay}}/{{yil}}</p>\r\n        <p class=\"block text-center mb-5 text-xl uppercase font-mono\">{{saat}}:{{dakika}}</p>\r\n      </div>\r\n      <!-- anlık hava durumu bilgisi -->\r\n      <div class=\"text-center\">\r\n        <img class=\"w-40 rounded-full mx-auto\" src=\"{{resim}}\" alt=\"resim\">\r\n        <div class=\"text-2xl\">{{hava}}</div>\r\n        <div class=\"text-2xl\">Hate {{sicaklik}}* Degree</div>\r\n      </div>\r\n      <!-- diğer ayrıntılar -->\r\n      <div class=\"text-center\">\r\n        <p class=\"text-xl\"></p>\r\n        <p class=\"text-xl\"></p>\r\n        <p class=\"text-xl\"></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}