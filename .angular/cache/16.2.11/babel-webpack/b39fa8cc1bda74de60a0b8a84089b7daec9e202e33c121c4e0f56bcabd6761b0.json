{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HesapComponent = class HesapComponent {\n  constructor() {\n    this.result = 0;\n    this.operation = '';\n    this.firstOperand = 0;\n    this.secondOperand = 0;\n    this.input = '';\n  }\n  // Define the button click events for each button\n  numberClick(number) {\n    if (this.operation === '') {\n      this.result = number;\n    } else {\n      this.input += number;\n    }\n  }\n  decimalClick() {\n    if (this.operation === '') {\n      this.result = parseFloat(this.result + ',');\n    } else {\n      this.input += '.';\n    }\n  }\n  operationClick(operator) {\n    if (this.operation === '') {\n      this.firstOperand = this.result;\n      this.result = 0;\n      this.operation = operator;\n    } else {\n      this.secondOperand = parseFloat(this.input);\n      this.performOperation();\n      this.operation = operator;\n      this.input = '';\n    }\n  }\n  equalClick() {\n    if (this.operation !== '') {\n      this.secondOperand = parseFloat(this.input);\n      this.performOperation();\n      this.operation = '';\n      this.input = '';\n    }\n  }\n  performOperation() {\n    switch (this.operation) {\n      case '+':\n        this.result = this.firstOperand + this.secondOperand;\n        break;\n      case '-':\n        this.result = this.firstOperand - this.secondOperand;\n        break;\n      case 'x':\n        this.result = this.firstOperand * this.secondOperand;\n        break;\n      case '/':\n        this.result = this.firstOperand / this.secondOperand;\n        break;\n      case '%':\n        this.result = this.firstOperand % this.secondOperand;\n        break;\n    }\n  }\n  // Additional button click events for special functions\n  acClick() {\n    this.result = 0;\n    this.operation = '';\n    this.firstOperand = 0;\n    this.secondOperand = 0;\n    this.input = '';\n  }\n  positiveNegativeClick() {\n    this.result = -this.result;\n  }\n  // Define the display logic\n  display() {\n    if (this.operation === '') {\n      return this.result;\n    } else {\n      return this.input;\n    }\n  }\n};\nHesapComponent = __decorate([Component({\n  selector: 'app-hesap',\n  templateUrl: './hesap.component.html',\n  styleUrls: ['./hesap.component.css']\n})], HesapComponent);\nexport { HesapComponent };","map":{"version":3,"names":["Component","HesapComponent","constructor","result","operation","firstOperand","secondOperand","input","numberClick","number","decimalClick","parseFloat","operationClick","operator","performOperation","equalClick","acClick","positiveNegativeClick","display","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mertc\\OneDrive\\Masaüstü\\KODLAMA\\angular\\project1\\src\\app\\hesap\\hesap.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-hesap',\n  templateUrl: './hesap.component.html',\n  styleUrls: ['./hesap.component.css']\n})\n\n\nexport class HesapComponent {\n  result = 0;\n  operation = '';\n  firstOperand = 0;\n  secondOperand = 0;\n  input = '';\n \n  // Define the button click events for each button\n  numberClick(number:any) {\n     if (this.operation === '') {\n       this.result = number;\n     } else {\n       this.input += number;\n     }\n  }\n \n  decimalClick() {\n     if (this.operation === '') {\n       this.result = parseFloat(this.result + ',');\n     } else {\n       this.input += '.';\n     }\n  }\n \n  operationClick(operator:any) {\n     if (this.operation === '') {\n       this.firstOperand = this.result;\n       this.result = 0;\n       this.operation = operator;\n     } else {\n       this.secondOperand = parseFloat(this.input);\n       this.performOperation();\n       this.operation = operator;\n       this.input = '';\n     }\n  }\n \n  equalClick() {\n     if (this.operation !== '') {\n       this.secondOperand = parseFloat(this.input);\n       this.performOperation();\n       this.operation = '';\n       this.input = '';\n     }\n  }\n \n  performOperation() {\n     switch (this.operation) {\n       case '+':\n         this.result = this.firstOperand + this.secondOperand;\n         break;\n       case '-':\n         this.result = this.firstOperand - this.secondOperand;\n         break;\n       case 'x':\n         this.result = this.firstOperand * this.secondOperand;\n         break;\n       case '/':\n         this.result = this.firstOperand / this.secondOperand;\n         break;\n       case '%':\n         this.result = this.firstOperand % this.secondOperand;\n         break;\n     }\n  }\n \n  // Additional button click events for special functions\n  acClick() {\n     this.result = 0;\n     this.operation = '';\n     this.firstOperand = 0;\n     this.secondOperand = 0;\n     this.input = '';\n  }\n \n  positiveNegativeClick() {\n     this.result = -this.result;\n  }\n \n  // Define the display logic\n  display() {\n     if (this.operation === '') {\n       return this.result;\n     } else {\n       return this.input;\n     }\n  }\n }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}